import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.MockitoAnnotations;

class PartyRelationTest {

    @InjectMocks
    private PartyRelation partyRelation;

    @BeforeEach
    void setUp() {
        MockitoAnnotations.openMocks(this);
        partyRelation = new PartyRelation();
    }

    @Test
    void testGettersAndSetters() {
        partyRelation.setIdentifier(1);
        partyRelation.setPartyIdentifier(2);
        partyRelation.setAgreementIdentifier(3);
        partyRelation.setFacilityIdentifier(4);
        partyRelation.setPartyRoleCode("ROLE123");
        partyRelation.setIsDeleted('N');

        assertEquals(1, partyRelation.getIdentifier());
        assertEquals(2, partyRelation.getPartyIdentifier());
        assertEquals(3, partyRelation.getAgreementIdentifier());
        assertEquals(4, partyRelation.getFacilityIdentifier());
        assertEquals("ROLE123", partyRelation.getPartyRoleCode());
        assertEquals('N', partyRelation.getIsDeleted());
    }

    @Test
    void testEqualsAndHashCode() {
        PartyRelation relation1 = new PartyRelation();
        PartyRelation relation2 = new PartyRelation();

        relation1.setIdentifier(1);
        relation2.setIdentifier(1);

        assertEquals(relation1, relation2);
        assertEquals(relation1.hashCode(), relation2.hashCode());
    }

    @Test
    void testToString() {
        partyRelation.setIdentifier(1);
        partyRelation.setPartyRoleCode("ROLE123");

        String expected = "PartyRelation(identifier=1, partyRoleCode=ROLE123, ...)";
        assertTrue(partyRelation.toString().contains("identifier=1"));
        assertTrue(partyRelation.toString().contains("partyRoleCode=ROLE123"));
    }
}